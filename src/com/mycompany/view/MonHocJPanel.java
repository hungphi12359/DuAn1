/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.view;

import com.mycompany.duan1.X.MsgBox;
import com.mycompany.duan1.X.Validate;
import com.mycompany.duan1.dao.ChuyenNganhDao;
import com.mycompany.duan1.dao.HocKyDao;
import com.mycompany.duan1.dao.MonHocDao;
import com.mycompany.duan1.dao.NhanVienDao;
import com.mycompany.duan1.model.ChuyenNganh;
import com.mycompany.duan1.model.HocKy;
import com.mycompany.duan1.model.MonHoc;
import com.mycompany.duan1.model.NhanVien;
import java.awt.Color;
import static java.awt.Color.red;
import static java.awt.Color.white;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import scrollbar.ScrollBarCustom;
import java.util.logging.Logger;
import java.util.logging.Level;
import javax.swing.JTable;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.text.MessageFormat;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author ADMIN
 */
public class MonHocJPanel extends javax.swing.JPanel {

    ChuyenNganhDao cndao = new ChuyenNganhDao();
    MonHocDao mhDao = new MonHocDao();
    NhanVienDao nvDao = new NhanVienDao();
    HocKyDao hkdao = new HocKyDao();
    int row = -1;

    /**
     * Creates new form MonHocJPanel
     */
    public MonHocJPanel() {
        initComponents();
        initTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnMonHoc = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnmoi = new javax.swing.JButton();
        Scrollbar = new javax.swing.JScrollPane();
        tblMonHoc = new rojeru_san.complementos.RSTableMetro();
        jdcNgayBatDau = new com.toedter.calendar.JDateChooser();
        jdcNgayKetThuc = new com.toedter.calendar.JDateChooser();
        txtMaMonHoc = new textfield.MaMonHoc();
        txtTenMonHoc = new textfield.TenMonHoc();
        txtHocPhi = new textfield.HocPhi();
        cbbmachuyennganh = new combobox.CBBMaChuyenNganh();
        cbb_Manhanvien = new combobox.MaNhanVien();
        txtMaHocKy = new combobox.MaHocKy();
        btnExel5 = new rojeru_san.complementos.RSButtonHover();
        btnPrint = new rojeru_san.complementos.RSButtonHover();
        timkiem1 = new textfield.timkiem();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1100, 625));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(1100, 625));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpnMonHoc.setBackground(new java.awt.Color(255, 255, 255));
        jpnMonHoc.setPreferredSize(new java.awt.Dimension(1100, 625));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 0, new java.awt.Color(0, 0, 0)), "Quản Lý Môn Học", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(204, 0, 0))); // NOI18N
        jPanel2.setMinimumSize(new java.awt.Dimension(1100, 625));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("Ngày Kết Thúc");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 153, 153));
        jLabel7.setText("Ngày Bắt Đầu");

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myimage/icons/icons8-add-40.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myimage/icons/icons8-edit-40.png"))); // NOI18N
        btnupdate.setText("Sửa ");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myimage/icons/icons8-remove-40.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnmoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/myimage/icons/icons8-new-40.png"))); // NOI18N
        btnmoi.setText("Mới");
        btnmoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmoiActionPerformed(evt);
            }
        });

        Scrollbar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        tblMonHoc.setBackground(new java.awt.Color(204, 204, 204));
        tblMonHoc.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tblMonHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Môn Học", "Tên Môn Học", "Ngày Bắt Đầu", "Ngày Kết Thúc", "Mã Chuyên Ngành", "Mã Nhân Viên", "Học Phí", "Học Kỳ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMonHoc.setColorBackgoundHead(new java.awt.Color(204, 0, 51));
        tblMonHoc.setColorBordeFilas(new java.awt.Color(204, 0, 51));
        tblMonHoc.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tblMonHoc.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tblMonHoc.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tblMonHoc.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblMonHoc.setRowHeight(40);
        tblMonHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMonHocMouseClicked(evt);
            }
        });
        Scrollbar.setViewportView(tblMonHoc);

        jdcNgayBatDau.setDateFormatString("dd/MM/yyyy");

        jdcNgayKetThuc.setDateFormatString("dd/MM/yyyy");

        cbbmachuyennganh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbmachuyennganhActionPerformed(evt);
            }
        });

        btnExel5.setBackground(new java.awt.Color(204, 0, 51));
        btnExel5.setText("Exel");
        btnExel5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExel5ActionPerformed(evt);
            }
        });

        btnPrint.setBackground(new java.awt.Color(204, 0, 51));
        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        timkiem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timkiem1ActionPerformed(evt);
            }
        });
        timkiem1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                timkiem1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(Scrollbar, javax.swing.GroupLayout.PREFERRED_SIZE, 1060, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaHocKy, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdcNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdcNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHocPhi, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbbmachuyennganh, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbb_Manhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timkiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExel5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnmoi, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(Scrollbar, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(cbbmachuyennganh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(cbb_Manhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(timkiem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnExel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnmoi, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMaMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(txtTenMonHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtMaHocKy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(5, 5, 5)
                                .addComponent(jdcNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel2)
                                .addGap(5, 5, 5)
                                .addComponent(jdcNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txtHocPhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(2, 2, 2))
        );

        javax.swing.GroupLayout jpnMonHocLayout = new javax.swing.GroupLayout(jpnMonHoc);
        jpnMonHoc.setLayout(jpnMonHocLayout);
        jpnMonHocLayout.setHorizontalGroup(
            jpnMonHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnMonHocLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1090, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpnMonHocLayout.setVerticalGroup(
            jpnMonHocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnMonHocLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 619, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jpnMonHoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 630));
    }// </editor-fold>//GEN-END:initComponents

    private void tblMonHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMonHocMouseClicked
        try {

            row = tblMonHoc.getSelectedRow();
            if (row >= 0) {
                String id = (String) tblMonHoc.getValueAt(row, 0);
                MonHoc mh = mhDao.selectById(id);

                if (mh != null) {
                    cbbmachuyennganh.setSelectedItem(mh.getMaChuyenNganh());
                    txtTenMonHoc.setText(mh.getTenMonHoc());
                    txtMaMonHoc.setText(mh.getMaMonHoc());
                    cbb_Manhanvien.setSelectedItem(mh.getMaNhanVien());
                    txtHocPhi.setText(String.valueOf(mh.getHocPhi()));
                    txtMaHocKy.setSelectedItem(mh.getHocKy());
                    jdcNgayBatDau.setDate(mh.getNgayBatDau());
                    jdcNgayKetThuc.setDate(mh.getNgayKetThuc());
                    txtMaHocKy.setSelectedItem(mh.getHocKy());
                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
            e.printStackTrace();
        }         // TODO add your handling code here:
    }//GEN-LAST:event_tblMonHocMouseClicked

    private void btnmoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmoiActionPerformed
        txtMaMonHoc.setText("");
        txtTenMonHoc.setText("");
        fillComboBoxChuyenNganh();
        fillComboBoxNhanVien();
        txtHocPhi.setText("");
        txtMaHocKy.setToolTipText(null);
        jdcNgayBatDau.setDate(null);
        jdcNgayKetThuc.setDate(null);
    }//GEN-LAST:event_btnmoiActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
  try {
                        StringBuilder sb = new StringBuilder();

            vld.ValidatorNullJText(txtMaMonHoc, sb, "Mã Môn Học Không Được Để Trống");
            int x;
            x = JOptionPane.showConfirmDialog(this, "bạn có muốn xóa không ?");

            if (x == JOptionPane.YES_NO_OPTION) {
               mhDao.delete(txtMaMonHoc.getText());
            }
     
            JOptionPane.showMessageDialog(this, "Dữ liệu đã được xóa");
            Filltable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
            e.printStackTrace();
        }     // TODO add your handling code here:
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
    try {
                        StringBuilder sb = new StringBuilder();

            vld.ValidatorNullJText(txtMaMonHoc, sb, "Mã Môn Học Không Được Để Trống");
            vld.ValidatorNullJText(txtTenMonHoc, sb, "Tên Môn Học Không Được Để Trống");
            vld.ValidatorNullJText(txtHocPhi, sb, "Học Phí Môn Học Không Được Để Trống");
            vld.checkHocPhi(txtHocPhi, sb, "Học Phí Không Hợp Lệ");
            if (sb.length() > 0) {
                MsgBox.showErrorDialog(jPanel2, sb.toString(), "Đã Xảy Ra Lỗi");
                return;
            }
            if (jdcNgayBatDau.getDate() == null || jdcNgayKetThuc.getDate() == null) {
                jdcNgayBatDau.setBackground(red);
                jdcNgayKetThuc.setBackground(red);
                   MsgBox.showErrorDialog(this, "Ngày Bắt Đầu Và Ngày Kết Thúc Không Được Trống", "Đã Xảy Ra Lỗi");
                return;
            }

            MonHoc monHoc = new MonHoc();
            monHoc.setMaMonHoc(txtMaMonHoc.getText());

            monHoc.setTenMonHoc(txtTenMonHoc.getText());
            monHoc.setNgayBatDau(jdcNgayBatDau.getDate());
            monHoc.setNgayKetThuc(jdcNgayKetThuc.getDate());
            monHoc.setMaChuyenNganh(cbbmachuyennganh.getSelectedItem().toString());
            monHoc.setMaNhanVien(cbb_Manhanvien.getSelectedItem().toString());
            monHoc.setHocPhi(Float.parseFloat(txtHocPhi.getText()));
            monHoc.setHocKy(txtMaHocKy.getSelectedItem().toString());

            MonHocDao dao = new MonHocDao();
                        int x;
            x = JOptionPane.showConfirmDialog(this, "bạn có muốn cập nhật không ?");

            if (x == JOptionPane.YES_NO_OPTION) {
              dao.update(monHoc);
            }
           
            JOptionPane.showMessageDialog(this, "Dữ liệu đã được chỉnh sửa");
            Filltable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
            e.printStackTrace();
        }            // TODO add your handling code here:
    }//GEN-LAST:event_btnupdateActionPerformed
    public boolean checkTrungMa(JTextField txt, StringBuilder sb, String errorMessage) {
        txt.setBackground(white);
        if (mhDao.selectById(txt.getText()) == null) {
            return true;
        } else {
            txt.setBackground(Color.red);
            sb.append(errorMessage).append("\n");
            txt.requestFocus();
            return false;
        }
    }
    Validate vld = new Validate();
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            StringBuilder sb = new StringBuilder();
            vld.checkHocPhi(txtHocPhi, sb, "Học Phí Không Hợp Lệ");
            checkTrungMa(txtMaMonHoc, sb, "Bạn Nhập Trùng Mã Môn Học Đã Tồn Tại Trên Hệ Thống");
            vld.ValidatorNullJText(txtMaMonHoc, sb, "Mã Môn Học Không Được Để Trống");
            vld.ValidatorNullJText(txtTenMonHoc, sb, "Tên Môn Học Không Được Để Trống");
            vld.ValidatorNullJText(txtHocPhi, sb, "Học Phí Môn Học Không Được Để Trống");
            vld.checkMaNV(txtMaMonHoc, sb, "Mã Môn Học Không Được Qá 7 Ký Tự");
            if (sb.length() > 0) {
                MsgBox.showErrorDialog(jPanel2, sb.toString(), "Đã Xảy Ra Lỗi");
                return;
            }
            if (jdcNgayBatDau.getDate() == null || jdcNgayKetThuc.getDate() == null) {
                jdcNgayBatDau.setBackground(red);
                jdcNgayKetThuc.setBackground(red);
                   MsgBox.showErrorDialog(this, "Ngày Bắt Đầu Và Ngày Kết Thúc Không Được Trống", "Đã Xảy Ra Lỗi");
                return;
            }

            MonHoc monHoc = new MonHoc();
            monHoc.setMaMonHoc(txtMaMonHoc.getText());

            monHoc.setTenMonHoc(txtTenMonHoc.getText());
            monHoc.setNgayBatDau(jdcNgayBatDau.getDate());
            monHoc.setNgayKetThuc(jdcNgayKetThuc.getDate());
            monHoc.setMaChuyenNganh(cbbmachuyennganh.getSelectedItem().toString());
            monHoc.setMaNhanVien(cbb_Manhanvien.getSelectedItem().toString());
            monHoc.setHocPhi(Float.parseFloat(txtHocPhi.getText()));
            monHoc.setHocKy(txtMaHocKy.getSelectedItem().toString());

            mhDao.insert(monHoc);
            JOptionPane.showMessageDialog(this, "Đã lưu");
            Filltable();
        } catch (Exception e) {
          MsgBox.showErrorDialog(this, "Lỗi", "Đã Xảy Ra Lỗi");
            return;
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void cbbmachuyennganhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbmachuyennganhActionPerformed
        // TODO add your handling code here:
        fillComboBoxNhanVien();
    }//GEN-LAST:event_cbbmachuyennganhActionPerformed

    private void btnExel5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExel5ActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblMonHoc.getModel();
        FileOutputStream exelFOU = null;
        BufferedOutputStream exelBOU = null;
        XSSFWorkbook exelJtableExporter = null;
        JFileChooser exelfileChooser = new JFileChooser("D:\\duan1\\DuAn1_Khanh\\Exel");
        exelfileChooser.setDialogTitle("Save As");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXEL FILES", "xls", "xlsx", "xlsm");
        exelfileChooser.setFileFilter(fnef);
        int exelChooser = exelfileChooser.showSaveDialog(null);

        if (exelChooser == JFileChooser.APPROVE_OPTION) {

            try {
                exelJtableExporter = new XSSFWorkbook();
                XSSFSheet exelSheet = exelJtableExporter.createSheet("JTable Sheet");
                for (int i = 0; i < model.getRowCount(); i++) {
                    XSSFRow exelRow = exelSheet.createRow(i);

                    for (int j = 0; j < model.getColumnCount(); j++) {
                        XSSFCell exelCell = exelRow.createCell(j);
                        exelCell.setCellValue(model.getValueAt(i, j).toString());
                    }

                }
                exelFOU = new FileOutputStream(exelfileChooser.getSelectedFile() + ".xls");
                exelBOU = new BufferedOutputStream(exelFOU);
                exelJtableExporter.write(exelBOU);
                JOptionPane.showMessageDialog(this, "Export Successfully !");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(SinhVienJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(SinhVienJPanel.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if (exelBOU != null) {
                        exelBOU.close();
                    }
                    if (exelFOU != null) {
                        exelFOU.close();
                    }
                    if (exelJtableExporter != null) {

                    }
                } catch (IOException ex) {

                    Logger.getLogger(SinhVienJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnExel5ActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        MessageFormat header = new MessageFormat("Item report");

        try {
            tblMonHoc.print(JTable.PrintMode.NORMAL, header, null);
            JFileChooser pdfChooser = new JFileChooser("D:\\duan1\\DuAn1_Khanh\\Print");
            pdfChooser.setDialogTitle("Save As");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void timkiem1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timkiem1KeyPressed
        try {
            DefaultTableModel model = (DefaultTableModel) tblMonHoc.getModel();
            model.setRowCount(0);
            String keyword = timkiem1.getText();
            List<MonHoc> list = mhDao.selectByMaMH(keyword);
            for (MonHoc nh : list) {
                model.addRow(new Object[]{
                    nh.getMaMonHoc(),
                    nh.getTenMonHoc(),
                    //                    nh.getNgaySinh(),
                    nh.getNgayBatDau(),
                    nh.getNgayKetThuc(),
                    //                    nh.getSDT(),
                    //                    nh.getDiaChi(),

                    nh.getMaChuyenNganh(),
                    nh.getMaNhanVien(),
                    nh.getHocPhi(),
                    nh.getHocKy()
                });

            }

        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi Truy Vấn");
        }

    }//GEN-LAST:event_timkiem1KeyPressed

    private void timkiem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timkiem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timkiem1ActionPerformed
    void Filltable() {
        DefaultTableModel model = (DefaultTableModel) tblMonHoc.getModel();
        model.setRowCount(0);
        List<MonHoc> list = mhDao.selectAll();
        for (MonHoc mh : list) {
            Object[] row = {mh.getMaMonHoc(), mh.getTenMonHoc(), mh.getNgayBatDau(), mh.getNgayKetThuc(), mh.getMaChuyenNganh(), mh.getMaNhanVien(), mh.getHocPhi(), mh.getHocKy()};
            model.addRow(row);
        }
    }

    void initTable() {
        Filltable();
        fixTable();
        fillComboBoxChuyenNganh();
        fillComboBoxHocKy();
    }

    void fixTable() {
        Scrollbar.getViewport().setBackground(Color.WHITE);
        Scrollbar.setVerticalScrollBar(new ScrollBarCustom());
        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);
        Scrollbar.setCorner(JScrollPane.UPPER_RIGHT_CORNER, p);
        Scrollbar.setBorder(new EmptyBorder(5, 10, 5, 10));
    }

    void fillComboBoxChuyenNganh() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbbmachuyennganh.getModel();
        model.removeAllElements();
        try {
            List<ChuyenNganh> list = cndao.selectAll();
            for (ChuyenNganh cd : list) {
                model.addElement(cd.getMaChuyenNganh());
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Lỗi Truy Vấn");
        }

    }

    void fillComboBoxNhanVien() {
        try {
            DefaultComboBoxModel model = (DefaultComboBoxModel) cbb_Manhanvien.getModel();
            model.removeAllElements();
            try {
                String chuyenNganh = cbbmachuyennganh.getSelectedItem().toString();
                List<NhanVien> list = nvDao.selectByMaCN(chuyenNganh);
                for (NhanVien cd : list) {
                    model.addElement(cd.getMaNhanVien());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Lỗi Truy Vấn");
        }

    }

    void fillComboBoxHocKy() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) txtMaHocKy.getModel();
        model.removeAllElements();
        try {
            List<HocKy> list = hkdao.selectAll();
            for (HocKy cd : list) {
                model.addElement(cd.getMaHocKy());
            }
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Lỗi Truy Vấn");
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Scrollbar;
    private rojeru_san.complementos.RSButtonHover btnExel5;
    private rojeru_san.complementos.RSButtonHover btnPrint;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnmoi;
    private javax.swing.JButton btnupdate;
    private combobox.MaNhanVien cbb_Manhanvien;
    private combobox.CBBMaChuyenNganh cbbmachuyennganh;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private com.toedter.calendar.JDateChooser jdcNgayBatDau;
    private com.toedter.calendar.JDateChooser jdcNgayKetThuc;
    private javax.swing.JPanel jpnMonHoc;
    private rojeru_san.complementos.RSTableMetro tblMonHoc;
    private textfield.timkiem timkiem1;
    private textfield.HocPhi txtHocPhi;
    private combobox.MaHocKy txtMaHocKy;
    private textfield.MaMonHoc txtMaMonHoc;
    private textfield.TenMonHoc txtTenMonHoc;
    // End of variables declaration//GEN-END:variables
}
